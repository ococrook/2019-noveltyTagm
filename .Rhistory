plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of LOPIT-DC U2OS data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(10, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
toSubsethl <- (fData(itzhak2017)$tagm.newcluster.prob > 0.99) & fData(itzhak2017)$tagm.mcmc.outlier < 0.01
toSubsethl
sum(toSubsethl)
toSubsethl <- (fData(itzhak2017)$tagm.newcluster.prob > 0.99) & fData(itzhak2017)$tagm.mcmc.outlier < 0.01
# Create annotation
annot <- data.frame(organelle = fData(itzhak2017)$tagm.phenotype[toSubsethl])
rownames(annot) <- rownames(fData(itzhak2017))[toSubsethl]
# Set up for heat map
ann_colors = list(
organelle = c(getStockcol()[1:nlevels(itzhak2017NoveltyRes$mpCombined$cl)])
)
names(ann_colors$organelle) <- levels(annot$organelle)
psmSub <- rownames(fData(itzhak2017))[toSubsethl]
# Create Heatmap of PSM to big too run subset to
pheatmap(itzhak2017NoveltyRes$psmCombined[psmSub,psmSub], useRaster = TRUE, annotation_row = annot, show_rownames = F, show_colnames = F, annotation_colors = ann_colors, treeheight_row = 0, treeheight_col = 0, main = "Heatmap of the posterior similarity matrix for the Mouse neuron data")
pheatmap(itzhak2017NoveltyRes$psmCombined[psmSub,psmSub], useRaster = TRUE, annotation_row = annot, show_rownames = F, show_colnames = F, annotation_colors = ann_colors, treeheight_row = 0, treeheight_col = 0, main = "Heatmap of the posterior similarity matrix for the mouse neuron data")
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(8, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(8, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
```{r,}
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(8, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
```
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(6, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(6, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(7, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of Mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(7, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
par(mar=c(5,4,4,10), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(itzhak2017)$tagm.newcluster.prob
plot2D(itzhak2017 , fcol = "tagm.phenotype", cex = ptsze, main = "PCA of mouse neuron data with pointer scaled to discovery probability")
myleg <- levels(itzhak2017NoveltyRes$mpCombined$cl)
legend(7, 8, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.phenotype]
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.phenotype > 0.95]
)
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95]
)
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.01 ]
)
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.5]
)
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.95]
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.95])
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.95])
cc1itzhak2017<- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 1" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017))) #chromatin
cc2itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 2" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
cc3itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 3" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017))) # nucleulus, nucleoplasm
cc4itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 4" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
cc5itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 5" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017))) # mitochondrial membran
cc6itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 6" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
cc7itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 7" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))#plasma membrane
cc8itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 8" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
cc9itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 9" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
cc10itzhak2017 <- enrichGO(gene = rownames(itzhak2017)[fData(itzhak2017)$tagm.phenotype == "Phenotype 10" &
fData(itzhak2017)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Mm.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2017)))
table(fData(itzhak2017)$tagm.phenotype[fData(itzhak2017)$tagm.newcluster.prob  > 0.95 & fData(itzhak2017)$tagm.mcmc.outlier < 0.95])
hirstTagmNoveltyparams@priors
ccItzhak2017res <- list(cc1itzhak2017, cc2itzhak2017, cc3itzhak2017, cc4itzhak2017,
cc5itzhak2017, cc6itzhak2017, cc7itzhak2017, cc8itzhak2017,
cc9itzhak2017, cc10itzhak2017)
save(ccItzhak2017res, file = "ccItzhak2017res.rda")
barplot(itzhak2017)
barplot(cc1itzhak2017)
barplot(cc2itzhak2017)
barplot(cc3itzhak2017)
barplot(cc4itzhak2017)
barplot(cc5itzhak2017)
barplot(cc6itzhak2017)
barplot(cc7itzhak2017)
barplot(cc8itzhak2017)
barplot(cc9itzhak2017)
barplot(cc10itzhak2017)
cc9itzhak2017
cc1itzhak2017
cc2itzhak2017
cc3itzhak2017
cc4itzhak2017
cc6itzhak2017
cc7itzhak2017
cc8itzhak2017
cc9itzhak2017
cc10itzhak2017
cc3itzhak2017
cc4itzhak2017
cc5itzhak2017
cc6itzhak2017
cc7itzhak2017
table(fData(itzhak2016)$tagm.phenotype[fData(itzhak2016)$new.cluster.prob])
table(fData(itzhak2016)$tagm.phenotype[fData(itzhak2016)$new.cluster.prob > 0.95])
table(fData(itzhak2016)$tagm.phenotype[fData(itzhak2016)$tagm.newcluster.prob > 0.95])
cc1itzhak2017
cc1itzhak2016
cc1itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 1" & fData(itzhak2016)$tagm.newcluster.prob > 0.99],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # proteasome complex
cc2itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 2" & fData(itzhak2016)$tagm.newcluster.prob > 0.99],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # mitochondrial membrane
cc3itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 3" & fData(itzhak2016)$tagm.newcluster.prob > 0.99],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # nucleulus, nucleoplasm, ribosome
itzhak2016
cc1itzhak2016
table(fData(itzhak2016)$tagm.phenotype)
barplot(itzhak2016)
barplot(cc1itzhak2016)
barplot(cc2itzhak2016)
barplot(cc3itzhak2016)
ccItzhak2016res <- list(cc1itzhak2016, cc2itzhak2016, cc3itzhak2016)
cc1itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 1" & fData(itzhak2016)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # mitochondrial membrane
cc2itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 2" & fData(itzhak2016)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # cytosolic part / nucleolus
cc3itzhak2016 <- enrichGO(gene = rownames(itzhak2016)[fData(itzhak2016)$tagm.phenotype == "Phenotype 3" & fData(itzhak2016)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Hs.eg.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(itzhak2016))) # chromsome/ chromatin
ccItzhak2016res <- list(cc1itzhak2016, cc2itzhak2016, cc3itzhak2016)
save(ccItzhak2016res, file = "ccItzhak2016res.rda")
barplot(cc1itzhak2016)
barplot(cc2itzhak2016)
barplot(cc3itzhak2016)
cc1itzhak2016$Description
cc1itzhak2016$p.value
cc1itzhak2016$p.adjust
cc2itzhak2016$Description
cc2itzhak2016$Description[1:10]
cc2itzhak2016p.value[1:10]
cc2itzhak2016p.adjust[1:10]
cc2itzhak2016$p.adjust[1:10]
cc2itzhak2016$p.adjust[1:10]
cc3itzhak2016$p.adjust[1:10]
cc3itzhak2017
cc4itzhak2017
cc5itzhak2017
cc6itzhak2017
cc7itzhak2017
cc8itzhak2017
cc9itzhak2017
cc10itzhak2017
cc1itzhak2017
cc2itzhak2017
barplot(cc2itzhak2017)
barplot(cc1itzhak2017)
cc1itzhak2017$p.adjust[1:10]
cc2itzhak2017$p.adjust[1:10]
bartplot(cc1Hirst)
barplot(cc1Hirst)
cc1Hirst$Description
cc1Hirst$Description[1:10]
cc1Hirst$p.adjust[1:10]
barplot(cc2Hirst)
barplot(cc3Hirst)
barplot(cc4Hirst)
barplot(cc5Hirst)
barplot(cc6Hirst)
barplot(cc7Hirst)
barplot(cc8Hirst)
barplot(cc9Hirst)
barplot(cc2Hirst)
barplot(cc3Hirst)
barplot(cc2Hirst)
cc2Hirst$Description[1:10]
cc2Hirst$p.adjust[1:10]
load("C:/Users/OllyC/Desktop/NoveltyTagm/hlyeastTagmNoveltyparams.rda")
data("yeast2018")
outliers <- mcmc_get_outliers(hlyeastTagmNoveltyparams)
lapply(outliers, mean)
plot(outliers[[1]])
plot(outliers[[2]])
plot(outliers[[3]])
plot(outliers[[4]])
plot(outliers[[5]])
plot(outliers[[6]])
gelman.diag(outliers[c(1,2)])
gelman.diag(outliers[c(1,2,3)])
gelman.diag(outliers[c(1,2,3,5)])
gelman.diag(outliers[c(1,2,3,5,6)])
gelman.diag(outliers[c(2,3)])
gelman.diag(outliers[c(1,3)])
gelman.diag(outliers[c(5,6)])
gelman.diag(outliers[c(3,4)])
gelman.diag(outliers[c(5,6)])
hlyeastTagmNoveltyparams_conv <- hlyeastTagmNoveltyparams[c(5,6)]
hlyeastTagmNoveltyRes <- tagmNoveltyProcess(object = yeast2018, params = hlyeastTagmNoveltyparams)
hlyeastTagmNoveltyRes <- tagmNoveltyProcess(object = yeast2018, params = hlyeastTagmNoveltyparams_conv)
hlyeastTagmNoveltyparams_conv <- tagmMcmcProcess(hlyeastTagmNoveltyparams_conv)
yeast2018 <- tagmPredict(object = yeast2018, params = hlyeastTagmNoveltyparams_conv)
save(hlyeastTagmNoveltyRes, file = "hlyeastTagmNoveltyRes.rda")
## attach information to MSnset
fData(yeast2018)$tagm.phenotype <- hlyeastTagmNoveltyRes$mpCombined$cl[rownames(fData(yeast2018))]
fData(yeast2018)$tagm.newcluster.prob <- hlyeastTagmNoveltyRes$tagm.newcluster.prob[rownames(fData(yeast2018))]
fData(yeast2018)$tagm.newcluster.prob[is.na(fData(yeast2018)$tagm.newcluster.prob)] <- 0
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze)
addLegend(yeast2018, fcol = "tagm.phenotype", ncol = 2, where = "bottomleft", cex = 0.5)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,13), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze, main = "PCA of hyperLOPIT yeast data with pointer scaled to discovery probability")
myleg <- levels(hlyeastTagmNoveltyRes$mpCombined$cl)
legend(6, 5, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,13), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze, main = "PCA of hyperLOPIT yeast data with pointer scaled to discovery probability")
myleg <- levels(hlyeastTagmNoveltyRes$mpCombined$cl)
legend(6, 7, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,13), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze, main = "PCA of hyperLOPIT yeast data with pointer scaled to discovery probability")
myleg <- levels(hlyeastTagmNoveltyRes$mpCombined$cl)
legend(8, 7, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,13), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze, main = "PCA of hyperLOPIT yeast data with pointer scaled to discovery probability")
myleg <- levels(hlyeastTagmNoveltyRes$mpCombined$cl)
legend(9, 7, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
toSubsethl <- (fData(yeast2018)$tagm.newcluster.prob > 0.99) & fData(yeast2018)$TAGM$tagm.mcmc.outlier < 0.95
# Create annotation
annot <- data.frame(organelle = fData(yeast2018)$tagm.phenotype[toSubsethl])
rownames(annot) <- rownames(fData(yeast2018))[toSubsethl]
# Set up for heat map
ann_colors = list(
organelle = c(getStockcol()[1:nlevels(hlyeastTagmNoveltyRes$mpCombined$cl)])
)
names(ann_colors$organelle) <- levels(annot$organelle)
psmSub <- rownames(fData(yeast2018))[toSubsethl]
# Create Heatmap of PSM to big too run subset to
pheatmap(hlyeastTagmNoveltyRes$psmCombined[psmSub,psmSub], useRaster = TRUE, annotation_row = annot, show_rownames = F, show_colnames = F, annotation_colors = ann_colors, treeheight_row = 0, treeheight_col = 0, main = "Heatmap of the posterior similarity matrix for the mouse data")
toSubsethl
toSubsethl <- (fData(yeast2018)$tagm.newcluster.prob > 0.99) & fData(yeast2018)$tagm.mcmc.outlier < 0.95
# Create annotation
annot <- data.frame(organelle = fData(yeast2018)$tagm.phenotype[toSubsethl])
rownames(annot) <- rownames(fData(yeast2018))[toSubsethl]
# Set up for heat map
ann_colors = list(
organelle = c(getStockcol()[1:nlevels(hlyeastTagmNoveltyRes$mpCombined$cl)])
)
names(ann_colors$organelle) <- levels(annot$organelle)
psmSub <- rownames(fData(yeast2018))[toSubsethl]
# Create Heatmap of PSM to big too run subset to
pheatmap(hlyeastTagmNoveltyRes$psmCombined[psmSub,psmSub], useRaster = TRUE, annotation_row = annot, show_rownames = F, show_colnames = F, annotation_colors = ann_colors, treeheight_row = 0, treeheight_col = 0, main = "Heatmap of the posterior similarity matrix for the mouse data")
pheatmap(hlyeastTagmNoveltyRes$psmCombined[psmSub,psmSub], useRaster = TRUE, annotation_row = annot, show_rownames = F, show_colnames = F, annotation_colors = ann_colors, treeheight_row = 0, treeheight_col = 0, main = "Heatmap of the posterior similarity matrix for the yeast data")
## specify large margin on the right hand side using mar and use xpd = T to allow plotting
par(mar=c(5,4,4,13), xpd = T)
## add legend manually with legend, you will need to play with x and y coords in legend depending on your screen and rendering
ptsze <- fData(yeast2018)$tagm.newcluster.prob
plot2D(yeast2018, fcol = "tagm.phenotype", cex = ptsze, main = "PCA of hyperLOPIT yeast data with pointer scaled to discovery probability")
myleg <- levels(hlyeastTagmNoveltyRes$mpCombined$cl)
legend(9, 7, legend = myleg, col = getStockcol(), bty = "n",
pch = 19, cex = 0.7, pt.cex = 1)
table(fData(yeast2018)$tagm.phenotype[fData(yeast2018)$tagm.newcluster.prob > 0.95])
cc1hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 1"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # ER, cell periphery, vaculoas membrane, plasma membrane
cc2hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 2"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # chromosome kintechore , chromsomal region
cc3hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 3"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # cytoskelton
cc4hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 4"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # mitchondrial intermembrane space
cc5hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 5"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # none
cc6hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 6"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) #none
cc7hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 7"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # intracellular immature spore, fungal-type cell wall
cc8hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 8"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # charperone complex
cc10hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 10"],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # charperone complex
ccYeastres <- list(cc1hlyeast, cc2hlyeast, cc3hlyeast, cc4hlyeast,
cc5hlyeast, cc6hlyeast, cc7hlyeast, cc8hlyeast,
cc10hlyeast)
save(ccYeastres, file = "ccYeastres.rda")
cc1
cc1hlyeast
barplot(cc1hlyeast)
barplot(cc2hlyeast)
barplot(cc3hlyeast)
barplot(cc4hlyeast)
barplot(cc5hlyeast)
barplot(cc6hlyeast)
barplot(cc6hlyeast)
cc6hlyeast
cc7hlyeast
cc1hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 1" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # lytic vacuole, cell periphery, vaculoas membrane, plasma membrane
cc2hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 2" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) #
cc3hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 3" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # transferase complex
cc4hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 4" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # cytoskeleton
cc5hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 5" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # mitohcondial intermembrane space
cc6hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 6"& fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) #none
cc7hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 7" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # intracellular immature spore, fungal-type cell wall
cc8hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 8" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # charperone complex
cc10hlyeast <- enrichGO(gene = rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 10" & fData(yeast2018)$tagm.newcluster.prob > 0.95],
OrgDb = "org.Sc.sgd.db",
keyType = "UNIPROT",
ont = "CC",
universe = rownames(fData(yeast2018))) # charperone complex
ccYeastres <- list(cc1hlyeast, cc2hlyeast, cc3hlyeast, cc4hlyeast,
cc5hlyeast, cc6hlyeast, cc7hlyeast, cc8hlyeast,
cc10hlyeast)
save(ccYeastres, file = "ccYeastres.rda")
barplot(cc1hlyeast)
barplot(cc2hlyeast)
cc2hlyeast
barplot(cc3hlyeast)
barplot(cc4hlyeast)
barplot(cc5hlyeast)
barplot(cc6hlyeast)
barplot(cc7hlyeast)
barplot(cc8hlyeast)
barplot(cc10hlyeast)
barplot(cc7hlyeast)
cc1hlyeast
cc1hlyeast$Description
cc1hlyeast$Description[1:10]
cc1hlyeast$p.adjust[1:10]
cc3hlyeast
cc3hlyeast$Description
cc3hlyeast$p.adjust
cc4hlyeast$p.adjust
cc4hlyeast$Description
cc8hlyeast$Description
cc8hlyeast$Description[1:10]
cc8hlyeast$p.adjust[1:10]
rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 8" & fData(yeast2018)$tagm.newcluster.prob > 0.95
)
rownames(yeast2018)[fData(yeast2018)$tagm.phenotype == "Phenotype 8" & fData(yeast2018)$tagm.newcluster.prob > 0.95]
